<?php
	<%@import('include/head.comment.otpl',$)%>

	namespace <%$.namespace%>\Base;

	use Gobl\DBAL\Db;
	use Gobl\DBAL\QueryBuilder;
	use Gobl\ORM\ORMResultsBase;

	/**
	 * Class <%$.class.results%>
	 *
	 * @method array|null|\<%$.namespace%>\<%$.class.entity%> current() This is to help editor infer type in loop (foreach or
	 *         for..).
	 * @method null|\<%$.namespace%>\<%$.class.entity%> fetchClass(bool $strict = true) Fetch the next row into table of the
	 *         entity class instance.
	 * @method \<%$.namespace%>\<%$.class.entity%>[] fetchAllClass(bool $strict = true) Fetch all rows and return array of the
	 *         entity class instance.
	 *
	 * @package <%$.namespace%>\Base
	 */
	abstract class <%$.class.results%> extends ORMResultsBase
	{
		/**
		 * <%$.class.results%> constructor.
		 *
		 * @param \Gobl\DBAL\Db           $db
		 * @param \Gobl\DBAL\QueryBuilder $query
		 *
		 * @throws \Gobl\ORM\Exceptions\ORMException
		 */
		public function __construct(Db $db, QueryBuilder $query)
		{
			parent::__construct($db, $query, \<%$.namespace%>\<%$.class.entity%>::class);
		}
	}